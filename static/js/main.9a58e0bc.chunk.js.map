{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onAddContact","setState","handleChange","target","value","this","className","styles","onSubmit","label","input","type","placeholder","required","onChange","Component","ContactListItem","id","deleteContact","key","listItem","section","onClick","ContactList","contacts","list","map","prop","changeFilter","filter","App","addContact","contact","uuidv4","toLowerCase","includes","trim","alert","prevState","currentTarget","getVisibleContacts","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","box","length","Filter","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,MAAQ,6B,oBCA5GD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,SAAW,oC,mBCAxED,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,oMCGNC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACbA,EAAEC,iBADgB,MAEO,EAAKL,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACd,EAAKI,MAAMC,aAAaN,EAAMC,GAC9B,EAAKM,SAAS,CACZP,KAAM,GACNC,OAAQ,M,EAIZO,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRT,EAAgBS,EAAhBT,KAAMU,EAAUD,EAAVC,MACd,EAAKH,SAAL,eAAiBP,EAAOU,K,uDAGhB,IAAD,EACkBC,KAAKZ,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,0BAAMW,UAAWC,IAAOf,YAAagB,SAAUH,KAAKT,cAClD,2BAAOU,UAAWC,IAAOE,OAAzB,OAEE,2BACEH,UAAWC,IAAOG,MAClBC,KAAK,OACLC,YAAY,qBACZlB,KAAK,OACLU,MAAOV,EACPmB,UAAU,EACVC,SAAUT,KAAKH,gBAGnB,2BAAOI,UAAWC,IAAOE,OAAzB,SAEE,2BACEH,UAAWC,IAAOG,MAClBC,KAAK,MACLC,YAAY,qBACZlB,KAAK,SACLU,MAAOT,EACPkB,UAAU,EACVC,SAAUT,KAAKH,gBAGnB,4BAAQS,KAAK,UAAb,oB,GAlDiCI,a,wBCoB1BC,EApBS,SAAC,GAAyC,IAAvCtB,EAAsC,EAAtCA,KAAMuB,EAAgC,EAAhCA,GAAItB,EAA4B,EAA5BA,OAAQuB,EAAoB,EAApBA,cAC3C,OACE,wBAAIC,IAAKF,EAAIX,UAAWC,IAAOa,UAC7B,2BAAI1B,EAAJ,KACA,2BAAIC,GACJ,6BAASW,UAAWC,IAAOc,SACzB,4BAAQV,KAAK,SAASW,QAASJ,GAA/B,a,iBCiBOK,EAtBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUN,EAAb,EAAaA,cAAb,OAClB,wBAAIZ,UAAWC,IAAOkB,MACnBD,EAASE,KAAI,gBAAGT,EAAH,EAAGA,GAAOU,EAAV,6BACZ,kBAAC,EAAD,eACER,IAAKF,GACDU,EAFN,CAGET,cAAe,kBAAMA,EAAcD,Y,iBCW5BW,EAlBM,SAAC,GAAyB,IAAvBxB,EAAsB,EAAtBA,MAAOU,EAAe,EAAfA,SAC7B,OACE,6BACE,2BACER,UAAWC,IAAOsB,OAClBlB,KAAK,OACLP,MAAOA,EACPU,SAAUA,M,iBCJGgB,E,4MACnBrC,MAAQ,CACN+B,SAAU,CACR,CAAEP,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,WAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,WAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,WAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,YAEhDkC,OAAQ,I,EAkBVE,WAAa,SAACrC,EAAMC,GAClB,IAAMqC,EAAU,CACdf,GAAIgB,cACJvC,OACAC,UAGY,EAAKF,MAAM+B,SAASE,KAAI,SAAAM,GAAO,OAC3CA,EAAQtC,KAAKwC,iBAGLC,SAASH,EAAQtC,KAAKwC,cAAcE,QAC5CC,MAAM,GAAD,OAAIL,EAAQtC,KAAZ,4BAEL,EAAKO,UAAS,SAAAqC,GACZ,MAAO,CACLd,SAAS,GAAD,mBAAMc,EAAUd,UAAhB,CAA0BQ,S,EAM1CJ,aAAe,SAAAC,GACb,EAAK5B,SAAS,CAAE4B,OAAQA,EAAOU,cAAcnC,S,EAG/CoC,mBAAqB,WAAO,IAAD,EACI,EAAK/C,MAA1B+B,EADiB,EACjBA,SAAUK,EADO,EACPA,OAClB,OAAOL,EAASK,QAAO,SAAAL,GAAQ,OAC7BA,EAAS9B,KAAKwC,cAAcC,SAASN,EAAOK,mB,EAIhDhB,cAAgB,SAAAuB,GACd,EAAKxC,UAAS,SAAAqC,GACZ,MAAO,CACLd,SAAUc,EAAUd,SAASK,QAAO,qBAAGZ,KAAgBwB,U,kEAlD3D,IAAMC,EAAoBC,aAAaC,QAAQ,YAC3CF,GACFrC,KAAKJ,SAAS,CACZuB,SAAUqB,KAAKC,MAAMJ,O,yCAKRK,EAAWT,GACxBA,EAAUd,WAAanB,KAAKZ,MAAM+B,UACpCmB,aAAaK,QAAQ,WAAYH,KAAKI,UAAU5C,KAAKZ,MAAM+B,a,+BA6CrD,IACAK,EAAWxB,KAAKZ,MAAhBoC,OACFqB,EAAkB7C,KAAKmC,qBAC7B,OACE,yBAAKlC,UAAWC,IAAO4C,KACrB,yCACA,kBAAC,EAAD,CAAanD,aAAcK,KAAK0B,aAChC,wCACCmB,EAAgBE,OAAS,GACxB,kBAACC,EAAD,CAAQjD,MAAOyB,EAAQf,SAAUT,KAAKuB,eAExC,kBAAC,EAAD,CACEJ,SAAU0B,EACVhC,cAAeb,KAAKa,qB,GAhFGH,aCHjCuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9a58e0bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__nMYLN\",\"label\":\"ContactForm_label__1H0bK\",\"input\":\"ContactForm_input__1rqNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactListItem_section__l9-Wa\",\"listItem\":\"ContactListItem_listItem__25fvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__P1-DE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__38yQI\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactForm/ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.ContactForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            placeholder=\"Enter contact name\"\r\n            name=\"name\"\r\n            value={name}\r\n            required={true}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            value={number}\r\n            required={true}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactListItem/ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, id, number, deleteContact }) => {\r\n  return (\r\n    <li key={id} className={styles.listItem}>\r\n      <p>{name}:</p>\r\n      <p>{number}</p>\r\n      <section className={styles.section}>\r\n        <button type=\"button\" onClick={deleteContact}>\r\n          Delete\r\n        </button>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport styles from '../ContactList/ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map(({ id, ...prop }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        {...prop}\r\n        deleteContact={() => deleteContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Filter/Filter.module.css';\r\n\r\nconst changeFilter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className={styles.filter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nchangeFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default changeFilter;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport styles from './App.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '4591256' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '4438912' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '6451779' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '2279126' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedContacts = localStorage.getItem('contacts');\r\n    if (persistedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(persistedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const names = this.state.contacts.map(contact =>\r\n      contact.name.toLowerCase(),\r\n    );\r\n\r\n    if (names.includes(contact.name.toLowerCase().trim())) {\r\n      alert(`${contact.name} is already in contacts`);\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [...prevState.contacts, contact],\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter: filter.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contacts =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div className={styles.box}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        {visibleContacts.length > 0 && (\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n        )}\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}